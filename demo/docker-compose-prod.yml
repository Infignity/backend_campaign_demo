version: '3.8'

services:
  app:
    container_name: campaign_demo
    build:
      context: .
      dockerfile: Dockerfile-Prod
    expose:
      - 8000
    env_file:
      - .env.prod
    command: gunicorn demo.wsgi:application --bind 0.0.0.0:8000
    # environment:
    #   - DEBUG=0
    depends_on:
      - db
      - redis
    volumes:
      - .:/code
  db:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"

  redis:
    image: redis
    container_name: campaign_redis
    ports:
      - "6379:6379"

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    env_file:
      - .env.prod
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app

  #     # - ./data/nginx/conf_ssl.d:/etc/nginx/
  #     # nginx.conf
     

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    # entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 5d & wait $${!}; done;'"
    env_file:
      - .env.prod
    volumes: 
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email yashwant@magicpitch.ai -d zoominfosales.tech --agree-tos
    depends_on:
      - nginx
  # proxy:
  #   build:
  #     context: ./docker/proxy
  #   restart: always
  #   depends_on:
  #     - app
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - certbot-web:/vol/www
  #     - proxy-dhparams:/vol/proxy
  #     - certbot-certs:/etc/letsencrypt
  #   env_file:
  #     - .env.prod
  #   # environment:
  #   #   - DOMAIN=${DOMAIN}

  # certbot:
  #   build:
  #     context: ./docker/certbot
  #   command: echo "Skipping @cerbort config..."
  #   env_file:
  #     - .env.prod
  #   # environment:
  #   #   - EMAIL=${ACME_DEFAULT_EMAIL}
  #   #   - DOMAIN=${DOMAIN}
  #   volumes:
  #     - certbot-web:/vol/www
  #     - certbot-certs:/etc/letsencrypt/
  #   depends_on:
  #     - proxy
  
  celery:
    container_name: campaign_celery
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-Prod
    command: celery -A demo worker -l DEBUG
    volumes:
      - .:/code
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
      - app


volumes:
  postgres_data:
  # certbot-web:
  # proxy-dhparams:
  # certbot-certs: