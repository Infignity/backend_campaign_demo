version: '3.8'

services:
  app:
    container_name: campaign_demo
    build:
      context: .
      dockerfile: Dockerfile-Prod
    restart: always
    expose:
      - 8000
    env_file:
      - .env.prod
    # command: gunicorn demo.wsgi:application --bind 0.0.0.0:8000
    # environment:
    #   - DEBUG=0
    depends_on:
      - db
      - redis
    volumes:
      - .:/code
  db:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"

  redis:
    image: redis
    container_name: campaign_redis
    ports:
      - "6379:6379"
  proxy:
    build:
      context: ./docker/proxy
    restart: always
    depends_on:
      - app
    ports:
      - 80:80
      - 443:443
    volumes:
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    env_file:
      - .env.prod
    # environment:
    #   - DOMAIN=${DOMAIN}

  certbot:
    build:
      context: ./docker/certbot
    command: echo "Skipping @cerbort config..."
    env_file:
      - .env.prod
    # environment:
    #   - EMAIL=${ACME_DEFAULT_EMAIL}
    #   - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - proxy

  
  celery:
    container_name: campaign_celery
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-Prod
    command: celery -A demo worker -l DEBUG
    volumes:
      - .:/code
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
      - app

volumes:
  postgres_data:
  certbot-web:
  proxy-dhparams:
  certbot-certs: 


